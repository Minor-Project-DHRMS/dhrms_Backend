// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;

import "contracts/STORAGE.sol";
import "contracts/Government.sol";

import "contracts/RBAC.sol";



contract DHRMS_GOV{
    address STORAGE_CONTRACT_ADDRESS;
    address RBAC_CONTRACT_ADDRESS;

    constructor(address _STORAGE_CONTRACT_ADDRESS, address _RBAC_CONTRACT_ADDRESS) {
        STORAGE_CONTRACT_ADDRESS = _STORAGE_CONTRACT_ADDRESS;
        RBAC_CONTRACT_ADDRESS = _RBAC_CONTRACT_ADDRESS;
    }

    event newOffice(string officeName, string _phoneNumber, address _GID);



    function addGovernmentOffice(
        string memory _officeName,
        string memory _phoneNumber,
        address _GID
    ) public onlyGoverment {
        STORAGE(STORAGE_CONTRACT_ADDRESS).addGovernmentDetails(_GID,address(
            new Government(_officeName, _phoneNumber, _GID)
        ));

        ROLE_BASED_ACCESS(RBAC_CONTRACT_ADDRESS).grantRoleAccessControl(
            "GOVERNMENT",
            _GID
        );
        emit newOffice(_officeName, _phoneNumber, _GID);
    }

    event editOffice(string officeName, string _phoneNumber, address _GID);

    function setGovernmentOfficeDetails(
        string memory _officeName,
        string memory _phoneNumber,
        address _GID
    ) public onlyGoverment {
        
        Government(STORAGE(STORAGE_CONTRACT_ADDRESS).governmentDetails(_GID)).setOfficeName(_officeName);
        Government(STORAGE(STORAGE_CONTRACT_ADDRESS).governmentDetails(_GID)).setPhoneNumber(_phoneNumber);

        emit editOffice(_officeName, _phoneNumber, _GID);
    }

    event removeOldGovernment(address _GID);

    function removeGovernment(address _GID) onlyAuth(_GID) public {
        STORAGE(STORAGE_CONTRACT_ADDRESS).removeGovernmentDetails(_GID);
        ROLE_BASED_ACCESS(RBAC_CONTRACT_ADDRESS).revokeRoleAccessControl(
            "GOVERNMENT",
            _GID
        );
        emit removeOldGovernment(_GID);
    }



    function getGovernmentDetails(address _GID)
        public
        view
        returns (string[2] memory)
    {
        return [
            Government(STORAGE(STORAGE_CONTRACT_ADDRESS).governmentDetails(_GID)).getOfficeName(),
            Government(STORAGE(STORAGE_CONTRACT_ADDRESS).governmentDetails(_GID)).getPhoneNumber()
        ];
    }


    modifier onlyGoverment() {
        ROLE_BASED_ACCESS(RBAC_CONTRACT_ADDRESS)._onlyGoverment();
        _;
    }

    

    modifier onlyPatient() {
        ROLE_BASED_ACCESS(RBAC_CONTRACT_ADDRESS)._onlyPatient();
        _;
    }

    

    modifier onlyDoctor() {
        ROLE_BASED_ACCESS(RBAC_CONTRACT_ADDRESS)._onlyDoctor();
        _;
    }

    

    modifier onlyHospital() {
        ROLE_BASED_ACCESS(RBAC_CONTRACT_ADDRESS)._onlyHospital();
        _;
    }

    modifier onlyAuth(address _GID) {
        ROLE_BASED_ACCESS(RBAC_CONTRACT_ADDRESS)._onlyAuth(_GID,"GOVERNMENT");
        _;
    }

}